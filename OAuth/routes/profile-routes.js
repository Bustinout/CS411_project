const router = require('express').Router();

const fetch = require("node-fetch");
const bodyParser = require('body-parser');
const express = require('express');
let app = express();
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

const authCheck = (req, res, next) => {
    if(!req.user){
        res.redirect('/auth/login');
    } else{
        next(); //go onto next middleware
    }
};

router.get('/', authCheck, (req, res) => {
   res.render('profile', { user: req.user });
});

function getDate(){
    const today = new Date();
    const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();
    const time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
    return date+' '+time;
}

//http://localhost:3000/profile/generatePlaylist?title=<GENRE>&duration=<DURATION>&start=<START>&end=<END>
router.get('/generatePlaylist', function(req, res) {
    let genre = req.query.title;
    let duration = req.query.duration; // in MILLISECONDS
    let l1 = req.query.start;
    let l2 = req.query.end;

    let counter = 0;
    let tracks = [];
    let redirectURL = '';
    let playlistID = '';

    //create playlist
    let body = {
        'name': 'Tune Your Ride Playlist - ' + l1 + ' to ' + l2 + ' (' + getDate() + ')',
        'description': 'Playlist for ride from ' + l1 + ' to ' + l2 + '. Generated by Tune Your Ride.',
        'public': false
    };

    let endpoint = 'https://api.spotify.com/v1/users/'+req.user.spotifyId+'/playlists';
    fetch(endpoint, {
        method: 'post',
        body:    JSON.stringify(body),
        headers: { 'Authorization': 'Bearer ' + req.user.accessToken }
    })
        .then(response => {
            return response.json();
        })
        .then(data => {
            //console.log(data);
            playlistID = data.id;
            redirectURL = data.external_urls.spotify;
        })
        .then(findTracks) //find tracks to put into tracks variable
        .catch(err => {
            console.log('Invalid Api Endpoint!');
            res.render('index', { title: 'The Error Page' });
        });

    function findTracks(){
        //fetch 100 at a time, add them to tracks one by one, adding the duration_ms to counter everytime and checking. if at the end of function if counter is still less than duration, call findtracks again.

        let endpoint = 'https://api.spotify.com/v1/recommendations?limit=100&seed_genres=' + genre;
        fetch(endpoint, {
            method: 'get',
            headers: { 'Authorization': 'Bearer ' + req.user.accessToken }
        })
            .then(res => res.json())
            .then(json => {
                for (let i = 0; i < json.tracks.length; i++){
                    if (counter < duration){
                        tracks.push(json.tracks[i].uri);
                        counter += json.tracks[i].duration_ms;
                    }
                    else{
                        console.log('enough tracks found!');
                        break;
                    }
                }
            }).then(checkCounter)

    }

    function checkCounter(){
        if (counter < duration){
            findTracks();
        }
        else{
            addTracks();
        }
    }

    function addTracks() { //adds tracks into playlist then redirects to spotify
        fetch('https://api.spotify.com/v1/playlists/'+ playlistID + '/tracks', {
            method: 'post',
            body:    JSON.stringify(tracks),
            headers: { 'Authorization': 'Bearer ' + req.user.accessToken }
        }).then(redirectToSpotify);
    }

    function redirectToSpotify(){
        console.log('redirecting to spotify - ' + redirectURL);
        res.redirect(redirectURL);
    }
});


module.exports = router;